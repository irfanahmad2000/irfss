{"ast":null,"code":"var _jsxFileName = \"/Users/mohdshahban/Downloads/irfSS/secretsanta/src/components/Qrscan.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './css/qrscan.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Qrscan = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:9002/empl');\n      setEmployees(response.data);\n      // console.log(employees);\n    } catch (e) {\n      console.error('Error fetching employee Data', e);\n    }\n  };\n  const GenerateQR = async id => {\n    window.location.href = `/secretSanta?Data=${id}`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qrmain\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"ms-4\",\n          children: \"Secret Santa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: \"https://www.shutterstock.com/image-vector/santa-hat-600nw-209018503.jpg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qrcode\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"qrhead\",\n          children: \"Generate QR to become a Secret Santa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"templ\",\n          children: /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"namee\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"eemail\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"gqr\",\n                  children: \"Generate QR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 5\n              }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"emname\",\n                  children: [employee.firstname, \" \", employee.lastname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"ememail\",\n                  children: [\" \", employee.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"emqr\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => GenerateQR(employee._id),\n                    children: \"Generate QR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 9\n                }, this)]\n              }, employee.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 7\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Qrscan, \"3r6YD0p2Tk2YoB6mLnWOfE3/WTU=\");\n_c = Qrscan;\nexport default Qrscan;\nvar _c;\n$RefreshReg$(_c, \"Qrscan\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Qrscan","_s","employees","setEmployees","fetchData","response","get","data","e","console","error","GenerateQR","id","window","location","href","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","employee","firstname","lastname","email","onClick","_id","_c","$RefreshReg$"],"sources":["/Users/mohdshahban/Downloads/irfSS/secretsanta/src/components/Qrscan.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './css/qrscan.css'\n\nimport axios from 'axios';\nconst Qrscan = () => {\n  const[employees,setEmployees]= useState([]);\n\nuseEffect(()=>{\n    fetchData()\n  },[])\n\nconst fetchData = async()=>{\n    try {\n      const response= await axios.get('http://localhost:9002/empl')\n      setEmployees(response.data);\n      // console.log(employees);\n    \n    } \n    catch (e) {\n      console.error('Error fetching employee Data',e)\n    }\n}\nconst GenerateQR= async(id)=>{\n  window.location.href=`/secretSanta?Data=${id}`;\n\n}\n  \n  return (\n    <>\n    <div className=\"qrmain\">\n\n    <div className=\"head\">\n                    <h1 className=\"ms-4\">Secret Santa</h1>\n                    <img className=\"logo\" src=\"https://www.shutterstock.com/image-vector/santa-hat-600nw-209018503.jpg\" alt=\"\" />\n                </div>\n        \n<div className='qrcode'>\n<h1 className='qrhead'>Generate QR to become a Secret Santa</h1>\n<table className='templ'>\n  <thead>\n  <tbody>\n    <tr className='text-center'>\n      <th className='namee'>Name</th>\n      <th className='eemail'>Email</th>\n      <th className='gqr'>Generate QR</th>\n    </tr>\n    {\n      employees.map((employee)=>\n      <tr key={employee.id} >\n        <td className='emname'>{employee.firstname} {employee.lastname}</td>\n        <td className='ememail'> {employee.email}</td>\n        <td className='emqr'><button onClick={()=>GenerateQR(employee._id)}>Generate QR</button></td>\n      </tr>)\n    }\n    </tbody>\n  </thead>  \n</table>\n</div>\n</div>\n    </>\n  )\n}\n\nexport default Qrscan"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}